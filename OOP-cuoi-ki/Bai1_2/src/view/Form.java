/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Controller;
import javax.swing.JOptionPane;
import model.MatHang;
import exception.HandlerException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.DonHang;
import model.KhachHang;

/**
 *
 * @author Huy Trường
 */
public class Form extends javax.swing.JFrame {

    /**
     * Creates new form Form
     */
    private List<MatHang> listMh = new ArrayList<>();
    private List<KhachHang> listKh = new ArrayList<>();
    private List<DonHang> listDh = new ArrayList<>();
    Controller controller;
    private String pathMh = "src/file/MH.txt";
    private String pathKh = "src/file/KH.txt";
    private String pathDs = "src/file/QLBH.TXT";
    private KhachHang currentKh;
    DefaultTableModel mhTbl;
    DefaultTableModel khTbl;
    DefaultTableModel dsTbl;
    public Form() {
        initComponents();
        this.setLocationRelativeTo(null);
        controller = new Controller();
        try {
            listMh = controller.readFormFile(pathMh);
            listKh = controller.readFormFile(pathKh);
            listDh = controller.readFormFile(pathDs);
            if (!listMh.isEmpty())
                MatHang.id = listMh.get(listMh.size()-1).getMaMh()+1;
            if (!listKh.isEmpty())
                KhachHang.id = listKh.get(listKh.size()-1).getMaKh()+1;
        } catch (IOException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
        mhTbl = (DefaultTableModel) mhTBL.getModel();
        khTbl = (DefaultTableModel) khTBL.getModel();
        dsTbl = (DefaultTableModel) dsTBL.getModel();
        listKh.forEach(item -> {
            khachHang.addItem(String.valueOf(item.getMaKh()));
        });
        showData();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mhTBL = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        khTBL = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dsTBL = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        sortCombobox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        khachHang = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mhTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã mặt hàng", "Tên mặt hàng", "Nhóm mặt hàng", "Giá"
            }
        ));
        jScrollPane1.setViewportView(mhTBL);

        jButton1.setText("Thêm mặt hàng");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(327, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý mặt hàng", jPanel1);

        jButton2.setText("Thêm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        khTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khách hàng", "Tên khách hàng", "Địa chỉ", "Số điện thoại"
            }
        ));
        jScrollPane2.setViewportView(khTBL);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 354, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(129, 129, 129))
        );

        jTabbedPane1.addTab("Quản lý khách hàng", jPanel2);

        dsTBL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã khách hàng", "Tên khách hàng", "Mã mặt hàng", "Tên mặt hàng", "Số lượng"
            }
        ));
        jScrollPane3.setViewportView(dsTBL);

        jButton3.setText("Thêm");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        sortCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mặc định", "Theo tên khách hàng", "Theo tên mặt hàng" }));
        sortCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortComboboxActionPerformed(evt);
            }
        });

        jLabel1.setText("Sắp xếp");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addComponent(sortCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sortCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 352, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý đơn hàng", jPanel3);

        khachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                khachHangActionPerformed(evt);
            }
        });

        jLabel2.setText("Mã khách hàng");

        jButton4.setText("Xuất hóa đơn");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(khachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(317, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(khachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(164, 164, 164)
                .addComponent(jButton4)
                .addContainerGap(390, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý hóa đơn", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new FormMatHang(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new FormKhachHang(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new FormDanhSach(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void sortComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortComboboxActionPerformed
        String sort = (String) sortCombobox.getSelectedItem();
        if (sort.equals("Theo tên khách hàng"))
        {
            listDh.sort((o1, o2) -> {
               String name1 = o1.getKhachHang().getTenKh().trim();
               String name2 = o2.getKhachHang().getTenKh().trim();
               if (name1.lastIndexOf(" ") != -1)
                   name1 = name1.substring(name1.lastIndexOf(" "));
               if (name2.lastIndexOf(" ") != -1)
                   name2 = name2.substring(name2.lastIndexOf(" "));
                return name1.compareTo(name2);
            });
        }
        else 
            if (sort.equals("Theo tên mặt hàng")){
                    listDh.sort((o1, o2) -> {
                    String name1 = o1.getMatHang().getTenMh().trim();
                    String name2 = o2.getMatHang().getTenMh().trim();
                    if (name1.lastIndexOf(" ") != -1)
                        name1 = name1.substring(name1.lastIndexOf(" "));
                    if (name2.lastIndexOf(" ") != -1)
                        name2 = name2.substring(name2.lastIndexOf(" "));
                     return name1.compareTo(name2);
            });
        }           
        showData();
    }//GEN-LAST:event_sortComboboxActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        new HoaDon(this, rootPaneCheckingEnabled).setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void khachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_khachHangActionPerformed
        currentKh = controller.getKhachHangFromList(listKh, Integer.parseInt((String) khachHang.getSelectedItem()));
    }//GEN-LAST:event_khachHangActionPerformed

    public List<DonHang> getListDs() {
        return listDh;
    }

    
    public KhachHang getCurrentKh() {
        return currentKh;
    }
    
    /**
     * @param args the command line arguments
     */
    public void addMh(String tenMh, String nhomMh, String giaMh) {
        String message = MatHang.checkFormat(tenMh, giaMh);

        try {
            if (!message.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, message);
                throw new HandlerException(message);
            }
            else 
            {
                try {
                    listMh.add(new MatHang(tenMh,nhomMh,giaMh));
                    controller.writeToFile(listMh, pathMh);
                    showData();
                } catch (IOException ex) {
                    Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (HandlerException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void addKh(String tenKh, String diaChi, String dienThoai) {
        String message = KhachHang.checkFormat(tenKh, diaChi,dienThoai);
        try {
            if (!message.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, message);
                throw new HandlerException(message);
            }
            else 
            {
                try {
                    listKh.add(new KhachHang(tenKh,diaChi,dienThoai));
                    controller.writeToFile(listKh, pathKh);
                    showData();
                } catch (IOException ex) {
                    Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (HandlerException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void addDs(int maKh, int maMh, String soLuong) {
        String message = "";
        if (soLuong.matches("[^0-9]+"))
            message = "Số lượng không hợp lệ";
        else {
            if (soLuong.isEmpty())
                message = "Số lượng không được để trống";
            else 
                if (Integer.parseInt(soLuong) <= 0)
                    message = "Số lượng > 0";
        }
        try {
            if (!message.isEmpty())
            {
                JOptionPane.showMessageDialog(rootPane, message);
                throw new HandlerException(message);
            }
            DonHang donHang = new DonHang(controller.getKhachHangFromList(listKh, maKh),controller.getMatHangFromList(listMh, maMh),Integer.parseInt(soLuong));
            int index = controller.getIndexOfDonHang(listDh, donHang);
            try {
                System.out.println(index);
                if (index != -1)
                    listDh.get(index).setSoLuong(listDh.get(index).getSoLuong()+Integer.parseInt(soLuong));
                else
                    listDh.add(donHang);
                controller.writeToFile(listDh,pathDs);
                showData();
            } catch (IOException ex) {
                Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (HandlerException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void showData(){
        mhTbl.setRowCount(0);
        khTbl.setRowCount(0);
        dsTbl.setRowCount(0);
        for (MatHang matHang : listMh){
            mhTbl.addRow(new Object[]{matHang.getMaMh(),matHang.getTenMh(),matHang.getNhomMh(),matHang.getGia()});
        }
        for (KhachHang khachHang : listKh){
            khTbl.addRow(new Object[]{khachHang.getMaKh(),khachHang.getTenKh(),khachHang.getDiaChi(),khachHang.getTenKh()});
        }
        for (DonHang danhSach : listDh){
            dsTbl.addRow(new Object[]{danhSach.getKhachHang().getMaKh(),danhSach.getKhachHang().getTenKh(),danhSach.getMatHang().getMaMh(),danhSach.getMatHang().getTenMh(),danhSach.getSoLuong()});
        }
        khachHang.resetKeyboardActions();
        listKh.forEach(item -> {
            khachHang.addItem(String.valueOf(item.getMaKh()));
        });
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    public List<MatHang> getListMh() {
        return listMh;
    }

    public List<KhachHang> getListKh() {
        return listKh;
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable dsTBL;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable khTBL;
    private javax.swing.JComboBox<String> khachHang;
    private javax.swing.JTable mhTBL;
    private javax.swing.JComboBox<String> sortCombobox;
    // End of variables declaration//GEN-END:variables
}
